"""add_rag_tables

Revision ID: 42f6523de440
Revises: 8e5198839b88
Create Date: 2025-09-07 17:14:13.858122

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42f6523de440'
down_revision: Union[str, None] = '8e5198839b88'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rag_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('program_document_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('embedding_model', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['program_document_id'], ['program_documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rag_documents_id'), 'rag_documents', ['id'], unique=False)
    op.create_table('rag_queries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('chat_session_id', sa.Integer(), nullable=True),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('query_embedding', sa.JSON(), nullable=True),
    sa.Column('retrieved_chunks', sa.JSON(), nullable=True),
    sa.Column('total_retrieved', sa.Integer(), nullable=True),
    sa.Column('max_similarity_score', sa.Float(), nullable=True),
    sa.Column('embedding_time_ms', sa.Float(), nullable=True),
    sa.Column('retrieval_time_ms', sa.Float(), nullable=True),
    sa.Column('total_time_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rag_queries_id'), 'rag_queries', ['id'], unique=False)
    op.create_table('rag_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rag_document_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('section_title', sa.String(), nullable=True),
    sa.Column('embedding_vector', sa.JSON(), nullable=True),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('chunk_type', sa.String(), nullable=True),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['rag_document_id'], ['rag_documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rag_chunks_id'), 'rag_chunks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rag_chunks_id'), table_name='rag_chunks')
    op.drop_table('rag_chunks')
    op.drop_index(op.f('ix_rag_queries_id'), table_name='rag_queries')
    op.drop_table('rag_queries')
    op.drop_index(op.f('ix_rag_documents_id'), table_name='rag_documents')
    op.drop_table('rag_documents')
    # ### end Alembic commands ###
