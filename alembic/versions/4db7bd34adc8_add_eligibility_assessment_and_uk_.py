"""Add eligibility assessment and UK programs tables

Revision ID: 4db7bd34adc8
Revises: 3a468a8a99bc
Create Date: 2025-08-30 14:24:00.328045

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4db7bd34adc8'
down_revision: Union[str, None] = '3a468a8a99bc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('uk_programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_name', sa.String(), nullable=False),
    sa.Column('program_name', sa.String(), nullable=False),
    sa.Column('program_level', sa.String(), nullable=False),
    sa.Column('field_of_study', sa.String(), nullable=False),
    sa.Column('min_ielts_overall', sa.Float(), nullable=True),
    sa.Column('min_ielts_components', sa.Float(), nullable=True),
    sa.Column('min_toefl_overall', sa.Float(), nullable=True),
    sa.Column('min_pte_overall', sa.Float(), nullable=True),
    sa.Column('min_gpa_4_scale', sa.Float(), nullable=True),
    sa.Column('min_percentage', sa.Float(), nullable=True),
    sa.Column('required_qualification', sa.String(), nullable=True),
    sa.Column('tuition_fee_gbp', sa.Float(), nullable=True),
    sa.Column('living_cost_gbp', sa.Float(), nullable=True),
    sa.Column('duration_months', sa.Integer(), nullable=True),
    sa.Column('intake_months', sa.JSON(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('program_description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uk_programs_id'), 'uk_programs', ['id'], unique=False)
    op.create_table('eligibility_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('passport_validity', sa.DateTime(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('highest_qualification', sa.String(), nullable=True),
    sa.Column('gpa_score', sa.Float(), nullable=True),
    sa.Column('grade_system', sa.String(), nullable=True),
    sa.Column('graduation_year', sa.Integer(), nullable=True),
    sa.Column('medium_of_instruction', sa.String(), nullable=True),
    sa.Column('notable_coursework', sa.Text(), nullable=True),
    sa.Column('english_test_type', sa.String(), nullable=True),
    sa.Column('english_overall_score', sa.Float(), nullable=True),
    sa.Column('english_listening', sa.Float(), nullable=True),
    sa.Column('english_reading', sa.Float(), nullable=True),
    sa.Column('english_writing', sa.Float(), nullable=True),
    sa.Column('english_speaking', sa.Float(), nullable=True),
    sa.Column('funding_source', sa.String(), nullable=True),
    sa.Column('liquid_funds_local', sa.Float(), nullable=True),
    sa.Column('liquid_funds_gbp', sa.Float(), nullable=True),
    sa.Column('local_currency', sa.String(), nullable=True),
    sa.Column('willing_to_provide_statements', sa.Boolean(), nullable=True),
    sa.Column('field_of_study', sa.String(), nullable=True),
    sa.Column('study_level', sa.String(), nullable=True),
    sa.Column('target_intake', sa.String(), nullable=True),
    sa.Column('city_preference', sa.String(), nullable=True),
    sa.Column('eligibility_status', sa.String(), nullable=True),
    sa.Column('eligibility_score', sa.Float(), nullable=True),
    sa.Column('assessment_reasons', sa.JSON(), nullable=True),
    sa.Column('suggested_programs', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_eligibility_assessments_id'), 'eligibility_assessments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_eligibility_assessments_id'), table_name='eligibility_assessments')
    op.drop_table('eligibility_assessments')
    op.drop_index(op.f('ix_uk_programs_id'), table_name='uk_programs')
    op.drop_table('uk_programs')
    # ### end Alembic commands ###
